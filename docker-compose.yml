version: '3.2'

services:
  eureka-server:
    build: eureka-server/
    container_name: eureka-server
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - type: bind
        source: ./logs
        target: /usr/src/logs
        read_only: false
    ports:
      - 8085:8085

  config-server:
    build: config-server/
    container_name: config-server
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - type: bind
        source: ./logs
        target: /usr/src/logs
        read_only: false
    ports:
      - 8880:8880

  api-gateway:
    build: api-gateway/
    container_name: api-gateway
    depends_on:
      - config-server
      - eureka-server
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - type: bind
        source: ./logs
        target: /usr/src/logs
        read_only: false
    ports:
      - 8080:8080
      
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: localhost
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
  
  mysql:
    image: mysql:latest
    container_name: mysql
    hostname: localhost
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1234

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    hostname: localhost
    ports:
      - "9411:9411"

  mongodb:
    image: mongo:latest
    container_name: mongodb
    hostname: localhost
    ports:
    - "27017:27017"

  user-service:
    build: UserService/
    container_name: user-service
    depends_on:
      - config-server
      - eureka-server
      - api-gateway
      - mongodb
      - rabbitmq
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - type: bind
        source: ./logs
        target: /usr/src/logs
        read_only: false
    ports:
      - 8100:8100

  medway-webapp:
    build: medway-webapp/
    container_name: medway-webapp
    restart: always
    network_mode: "host"
    hostname: localhost
    ports:
    - 8009:8009

  auth-service:
    build: auth-service/
    container_name: auth-service
    depends_on:
      - eureka-server
      - api-gateway
      - mysql
      - rabbitmq
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - type: bind
        source: ./logs
        target: /usr/src/logs
        read_only: false
    ports:
      - 8070:8070

  medicine-service:
    build: Medicine-Service/
    container_name: medicineService
    depends_on:
      - eureka-server
      - api-gateway
      - mysql
      - rabbitmq
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - type: bind
        source: ./logs
        target: /usr/src/logs
        read_only: false
    ports:
      - 8105:8105

  prescription-service:
    build: prescription-service/
    container_name: prescriptionService
    depends_on:
      - eureka-server
      - api-gateway
      - mongodb
      - rabbitmq
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - type: bind
        source: ./logs
        target: /usr/src/logs
        read_only: false
    ports:
      - 8071:8071

  order-service:
    build: order-service/
    container_name: orderService
    depends_on:
      - eureka-server
      - api-gateway
      - mongodb
      - rabbitmq
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - type: bind
        source: ./logs
        target: /usr/src/logs
        read_only: false
    ports:
      - 8110:8110

  stripe-service:
    build: stripe-service/
    container_name: stripeService
    depends_on:
      - eureka-server
      - api-gateway
      - rabbitmq
    restart: always
    network_mode: "host"
    hostname: localhost
    volumes:
      - type: bind
        source: ./logs
        target: /usr/src/logs
        read_only: false
    ports:
      - 8300:8300

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    hostname: localhost
    environment:
      cluster.name: "docker-cluster"
      #network.host: 0.0.0.0
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
      discovery.type: single-node

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    ports:
      - 5601:5601
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"
      ELASTICSEARCH_URL: "http://localhost:9200"
      #      SERVER_HOST: localhost
      KIBANA_DEFAULTAPPID: "dashboards"
      #     ELASTICSEARCH_USERNAME: elastic
      #     ELASTICSEARCH_PASSWORD: elastic
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: "true"
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.1
    volumes:
      - type: bind
        source: ./config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./config/logstash.conf
        target: /usr/share/logstash/pipeline/logstash.conf
        read_only: true
      - type: bind
        source: ./logs
        target:  /usr/share/logstash/pipeline/logs
        read_only: false
    #    network_mode: "host"
    #    hostname: localhost
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx1g -Xms1g"
    depends_on:
      - elasticsearch